//Made 7/15/2012 by SomeDude
//Contact: stevenquack86vg@gmail.com

//Gui Shortcut:
tex = [showgui texgui]

//The editbind I use: (works well since F2 is the texture list, and pause(default F1 bind) still works outside editmode)
//editbind F1 [showgui texgui]

//RaZgRiZ's funcion: Prevents GUI variables from resetting upon restart...
createine = [if (=s (getalias $arg1) "") [$arg1 = $arg2]]

//Function for converting 0-255 color codes to Sauer's 0-1 range:
vcolorc = [vcolor (divf $arg1 255) (divf $arg2 255) (divf $arg3 255)]

//GUI variables:
createine _vred 255  //vcolor
createine _vgrn 255
createine _vblu 255
createine _vshd 0
createine _voffx 0   //voffset
createine _voffy 0
createine _vrota 0   //vrotate
createine _vscal 0   //vscale
createine _vscrx 0   //vscroll
createine _vscry 0
createine _valf 128  //valpha
createine _valb 0

newgui texgui [
    guistayopen [
        guilist [
            guilist [
                guitextbox " scale:" //5
                guitextbox " x-dir:"// 5
                guitextbox " y-dir:"// 5
                guitextbox "rotate:" //5
            ]
            guilist [ 
                guibutton "" [_vscal = (max (- $_vscal 1) 0); if $_vscal [vscale (divf 8 (pow 2 (- 7 $_vscal)))] [vreset; vrotate $_vrota; voffset $_voffx $_voffy]] "arrow_bw.jpg"
                guibutton "" [_voffx = (max (- $_voffx 1) 0); voffset $_voffx $_voffy] "arrow_bw.jpg"
                guibutton "" [_voffy = (max (- $_voffy 1) 0); voffset $_voffx $_voffy] "arrow_bw.jpg"
            ]
             guilist [
                guislider _vscal 0 7 [if $_vscal [vscale (divf 8 (pow 2 (- 7 $_vscal)))] [vreset; vrotate $_vrota; voffset $_voffx $_voffy]]
                guislider _voffx 0 512 [voffset $_voffx $_voffy]
                guislider _voffy 0 512 [voffset $_voffx $_voffy]
                guilist [
                    guiradio "0 " _vrota 0 [vrotate 0]; guiradio "90 " _vrota 1 [vrotate 1]; guiradio "180 " _vrota 2 [vrotate 2]; guiradio "270 " _vrota 3 [vrotate 3]; guiradio "flip x " _vrota 4 [vrotate 4]; guiradio "flip y" _vrota 5 [vrotate 5]
                ]
                guilist [
                    guibutton "Apply Changes  " [if $_vscal [vscale (divf 8 (pow 2 (- 7 $_vscal)))]; vrotate $_vrota; voffset $_voffx $_voffy]
                    guibutton "Reset Texture" [vreset] "exit.jpg"
                ]
            ]
            guilist [
                guibutton "" [_vscal = (min (+ $_vscal 1) 7); if $_vscal [vscale (divf 8 (pow 2 (- 7 $_vscal)))] [vreset; vrotate $_vrota; voffset $_voffx $_voffy]] "arrow_fw.jpg"
                guibutton "" [_voffx = (min (+ $_voffx 1) 512); voffset $_voffx $_voffy] "arrow_fw.jpg"
                guibutton "" [_voffy = (min (+ $_voffy 1) 512); voffset $_voffx $_voffy] "arrow_fw.jpg"
            ]
        ]

        guitab "color"
        guilist [
            guilist [
                guitextbox " Red:" //5 1 0xFF0000
                guitextbox "Green:" //5 1 0x00FF00
                guitextbox " Blue:" //5 1 0x0000FF
                guitextbox "Shade:" //5 1 0x888888
            ]
            guilist [
                guibutton "" [_vred = (max (- $_vred 1) 0); _vshd = 0; vcolorc $_vred $_vgrn $_vblu] "arrow_bw.jpg"
                guibutton "" [_vgrn = (max (- $_vgrn 1) 0); _vshd = 0; vcolorc $_vred $_vgrn $_vblu] "arrow_bw.jpg"
                guibutton "" [_vblu = (max (- $_vblu 1) 0); _vshd = 0; vcolorc $_vred $_vgrn $_vblu] "arrow_bw.jpg"
                guibutton "" [_vshd = (max (- $_vshd 1) -128); vcolorc (max (+ $_vred $_vshd) -255) (max (+ $_vgrn $_vshd) -255) (max (+ $_vblu $_vshd) -255)] "arrow_bw.jpg"
            ]
            guilist [
                guislider _vred 0 255 [_vshd = 0; vcolorc $_vred $_vgrn $_vblu]
                guislider _vgrn 0 255 [_vshd = 0; vcolorc $_vred $_vgrn $_vblu]
                guislider _vblu 0 255 [_vshd = 0; vcolorc $_vred $_vgrn $_vblu]
                guislider _vshd -128 127 [if (> $_vshd -1) [vcolorc (min (+ $_vred $_vshd) 255) (min (+ $_vgrn $_vshd) 255) (min (+ $_vblu $_vshd) 255)] [vcolorc (max (+ $_vred $_vshd) -255) (max (+ $_vgrn $_vshd) -255) (max (+ $_vblu $_vshd) -255)]]
                guilist [
                    guibutton "Apply texcolor  " [vcolorc (+ $_vred $_vshd) (+ $_vgrn $_vshd) (+ $_vblu $_vshd)]
                    guibutton "Remove texcolor" [vcolorc 255 255 255] "exit.jpg"
                ]
            ]
            guilist [
                guibutton "" [_vred = (min (+ $_vred 1) 255); _vshd = 0; vcolorc $_vred $_vgrn $_vblu] "arrow_fw.jpg"
                guibutton "" [_vgrn = (min (+ $_vgrn 1) 255); _vshd = 0; vcolorc $_vred $_vgrn $_vblu] "arrow_fw.jpg"
                guibutton "" [_vblu = (min (+ $_vblu 1) 255); _vshd = 0; vcolorc $_vred $_vgrn $_vblu] "arrow_fw.jpg"
                guibutton "" [_vshd = (min (+ $_vshd 1) 255); vcolorc (min (+ $_vred $_vshd) 255) (min (+ $_vgrn $_vshd) 255) (min (+ $_vblu $_vshd) 255)] "arrow_fw.jpg"
            ]
        ]

        guitab "scroll"
        guilist [
            guilist [
                guitextbox " x-dir:" 
                guitextbox " y-dir:" 
            ]
            guilist [
                guibutton "" [_vscrx = (max (- $_vscrx 1) -128); vscroll (divf $_vscrx 64) (divf $_vscry 64)] "arrow_bw.jpg"
                guibutton "" [_vscry = (max (- $_vscry 1) -128); vscroll (divf $_vscrx 64) (divf $_vscry 64)] "arrow_bw.jpg"
            ]
            guilist [
                guislider _vscrx -128 128 [vscroll (divf $_vscrx 64) (divf $_vscry 64)]
                guislider _vscry -128 128 [vscroll (divf $_vscrx 64) (divf $_vscry 64)]
                guilist [
                    guibutton "Apply texscroll  " [vscroll (divf $_vscrx 64) (divf $_vscry 64)]
                    guibutton "Remove texscroll" [vscroll 0 0] "exit.jpg"
                ]
            ]
            guilist [
                guibutton "" [_vscrx = (min (+ $_vscrx 1) 128); vscroll (divf $_vscrx 64) (divf $_vscry 64)] "arrow_fw.jpg"
                guibutton "" [_vscry = (min (+ $_vscry 1) 128); vscroll (divf $_vscrx 64) (divf $_vscry 64)] "arrow_fw.jpg"
            ]
        ]

        guitab "alpha"
        guilist [
            guilist [
                guitextbox "Outer:" //5 1
                guitextbox "Inner:" //5 1
            ]
            guilist [
                guibutton "" [_valf = (max (- $_valf 1) 0); if (! $_valf) [_valf = .0256]; valpha (divf $_valf 256) (divf $_valb 256); alpha] "arrow_bw.jpg"
                guibutton "" [_valb = (max (- $_valb 1) 0); valpha (divf $_valf 256) (divf $_valb 256); alpha] "arrow_bw.jpg"
            ]
            guilist [
                guislider _valf 0 256 [if (! $_valf) [_valf = .0256]; valpha (divf $_valf 256) (divf $_valb 256); alpha]
                guislider _valb 0 256 [valpha (divf $_valf 256) (divf $_valb 256); alpha]
                guilist [
                    guibutton "Apply valpha  " [valpha (divf $_valf 256) (divf $_valb 256); alpha]
                    guibutton "Remove valpha" [valpha .5; air] "exit.jpg"
                ]
            ]
            guilist [
                guibutton "" [_valf = (min (+ $_valf 1) 255); valpha (divf $_valf 255) (divf $_valb 255); alpha] "arrow_fw.jpg"
                guibutton "" [_valb = (min (+ $_valb 1) 255); valpha (divf $_valf 255) (divf $_valb 255); alpha] "arrow_fw.jpg"
            ]
        ]

    ]
] "offset"
